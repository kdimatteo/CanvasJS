{"name":"Canvasjs","body":"#CanvasJS\r\n\r\n\r\nCanvasJS is a small helper library for the canvas 2d API. The goal is to extend and enhance the basic API while still remaining familiar. \r\n\r\n##API and Enhancements\r\n\r\nThere are currently two areas of focus\r\n\r\n* _Chaining_ any method that doesn't return an explicit value is chainable. \r\n* _API Enhancements_ These range from new concepts (getting the boundingBox of the last operation, getting the currentPos (x and y) of the 'cursor',) missing methods (circle, rectangle) to convenience methods (canvas properties are now getter/setter methods.)\r\n\r\nA simple example might look like this\r\n\r\n```javascript\r\n   \r\n        var ctx = new Canvas(\"ctx\"); \r\n        ctx.reset();\r\n        for (var i = 0; i<1000; i++){\r\n            var color = 'rgb(0,' + Math.floor(255 - i/7) + ',' +   \r\n                         Math.floor(255 - i/100) + ')';  \r\n            \r\n            ctx.beginPath().line({x:.4*i,y:.4*i,angle: i, distance:i * .40 }).strokeStyle(color).stroke();\r\n        }\r\n        \r\n   \r\n```    \r\n##Credits\r\n\r\nSo far...\r\n\r\nDreamed up by Rob Larsen with active encouragement by the Isobar Creative Technology team. \r\n\r\nKicked off by Bob Holt\r\n\r\nSmart stuff added by Marc Neuwirth\r\n\r\nContinuing housekeeping and project sheperding by Rob Larsen","tagline":"An helper library for the canvas 2d API","google":"UA-251752-14","note":"Don't delete this file! It's used internally to help with page regeneration."}